@model Ecommerce.Models.Cliente

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cliente = ViewBag.cliente;
}

<div id="colorlib-contact">
    <div class="container">
        <div class="row">
            <div class="col-md-10 col-md-offset-1">
                <div class="contact-wrap">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <h3>Cambiar Datos</h3>


                        <div class="row form-group">
                            <div class="col-md-6 padding-bottom">
                                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Nombre } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Estado } })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-6 padding-bottom">
                                @Html.LabelFor(model => model.Municipio, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Municipio, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Municipio } })
                                @Html.ValidationMessageFor(model => model.Municipio, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.CodigoPostal, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.CodigoPostal, new { htmlAttributes = new { @class = "form-control", @Value = cliente.CodigoPostal } })
                                @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-6 padding-bottom">
                                @Html.LabelFor(model => model.Colonia, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Colonia, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Colonia } })
                                @Html.ValidationMessageFor(model => model.Colonia, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Calle } })
                                @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-6 padding-bottom">
                                @Html.LabelFor(model => model.NoInterior, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.NoInterior, new { htmlAttributes = new { @class = "form-control", @Value = cliente.NoInterior } })
                                @Html.ValidationMessageFor(model => model.NoInterior, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.NoExterior, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.NoExterior, new { htmlAttributes = new { @class = "form-control", @Value = cliente.NoExterior } })
                                @Html.ValidationMessageFor(model => model.NoExterior, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-6 padding-bottom">
                                @Html.LabelFor(model => model.Referencia, htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control", @Value = cliente.Referencia } })
                                @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                <label>Tipo de Tarjeta</label>

                                @Html.DropDownList("Tipo_targeta",
                                new SelectList(new[] { "Crédito", "Débito" }),
                                null,
                                new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Tipo_targeta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-12">
                                <label>No. Tarjeta</label>

                                @Html.EditorFor(model => model.No_targeta, new { htmlAttributes = new { @class = "form-control", @Value = cliente.No_targeta } })
                                @Html.ValidationMessageFor(model => model.No_targeta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group text-center">
                            <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                            <div>
                                @Html.ActionLink("Regresar", "Index")
                            </div>
                        </div>



                    }

                </div>
            </div>
        </div>
    </div>
</div>

